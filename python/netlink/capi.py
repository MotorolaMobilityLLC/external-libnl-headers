# This file was automatically generated by SWIG (http://www.swig.org).
# Version 1.3.40
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.

from sys import version_info
if version_info >= (3,0,0):
    new_instancemethod = lambda func, inst, cls: _capi.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if version_info >= (2,6,0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_capi', [dirname(__file__)])
        except ImportError:
            import _capi
            return _capi
        if fp is not None:
            try:
                _mod = imp.load_module('_capi', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _capi = swig_import_helper()
    del swig_import_helper
else:
    import _capi
del version_info
try:
    _swig_property = property
except NameError:
    pass # Python < 2.2 doesn't have 'property'.
def _swig_setattr_nondynamic(self,class_type,name,value,static=1):
    if (name == "thisown"): return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name,None)
    if method: return method(self,value)
    if (not static) or hasattr(self,name):
        self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)

def _swig_setattr(self,class_type,name,value):
    return _swig_setattr_nondynamic(self,class_type,name,value,0)

def _swig_getattr(self,class_type,name):
    if (name == "thisown"): return self.this.own()
    method = class_type.__swig_getmethods__.get(name,None)
    if method: return method(self)
    raise AttributeError(name)

def _swig_repr(self):
    try: strthis = "proxy of " + self.this.__repr__()
    except: strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object : pass
    _newclass = 0


def _swig_setattr_nondynamic_method(set):
    def set_attr(self,name,value):
        if (name == "thisown"): return self.this.own(value)
        if hasattr(self,name) or (name == "this"):
            set(self,name,value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr



def alloc_dump_params():
  return _capi.alloc_dump_params()
alloc_dump_params = _capi.alloc_dump_params

def free_dump_params(*args):
  return _capi.free_dump_params(*args)
free_dump_params = _capi.free_dump_params
NL_DUMP_LINE = _capi.NL_DUMP_LINE
NL_DUMP_DETAILS = _capi.NL_DUMP_DETAILS
NL_DUMP_STATS = _capi.NL_DUMP_STATS
__NL_DUMP_MAX = _capi.__NL_DUMP_MAX
class nl_dump_params(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    dp_type = _swig_property(_capi.nl_dump_params_dp_type_get, _capi.nl_dump_params_dp_type_set)
    dp_prefix = _swig_property(_capi.nl_dump_params_dp_prefix_get, _capi.nl_dump_params_dp_prefix_set)
    dp_print_index = _swig_property(_capi.nl_dump_params_dp_print_index_get, _capi.nl_dump_params_dp_print_index_set)
    dp_dump_msgtype = _swig_property(_capi.nl_dump_params_dp_dump_msgtype_get, _capi.nl_dump_params_dp_dump_msgtype_set)
    dp_cb = _swig_property(_capi.nl_dump_params_dp_cb_get, _capi.nl_dump_params_dp_cb_set)
    dp_nl_cb = _swig_property(_capi.nl_dump_params_dp_nl_cb_get, _capi.nl_dump_params_dp_nl_cb_set)
    dp_data = _swig_property(_capi.nl_dump_params_dp_data_get, _capi.nl_dump_params_dp_data_set)
    dp_fd = _swig_property(_capi.nl_dump_params_dp_fd_get, _capi.nl_dump_params_dp_fd_set)
    dp_buf = _swig_property(_capi.nl_dump_params_dp_buf_get, _capi.nl_dump_params_dp_buf_set)
    dp_buflen = _swig_property(_capi.nl_dump_params_dp_buflen_get, _capi.nl_dump_params_dp_buflen_set)
    dp_pre_dump = _swig_property(_capi.nl_dump_params_dp_pre_dump_get, _capi.nl_dump_params_dp_pre_dump_set)
    dp_ivar = _swig_property(_capi.nl_dump_params_dp_ivar_get, _capi.nl_dump_params_dp_ivar_set)
    dp_line = _swig_property(_capi.nl_dump_params_dp_line_get, _capi.nl_dump_params_dp_line_set)
    __swig_destroy__ = _capi.delete_nl_dump_params
nl_dump_params_swigregister = _capi.nl_dump_params_swigregister
nl_dump_params_swigregister(nl_dump_params)


def nl_geterror(*args):
  return _capi.nl_geterror(*args)
nl_geterror = _capi.nl_geterror

def nl_cancel_down_bytes(*args):
  return _capi.nl_cancel_down_bytes(*args)
nl_cancel_down_bytes = _capi.nl_cancel_down_bytes

def nl_cancel_down_bits(*args):
  return _capi.nl_cancel_down_bits(*args)
nl_cancel_down_bits = _capi.nl_cancel_down_bits

def nl_rate2str(*args):
  return _capi.nl_rate2str(*args)
nl_rate2str = _capi.nl_rate2str

def nl_cancel_down_us(*args):
  return _capi.nl_cancel_down_us(*args)
nl_cancel_down_us = _capi.nl_cancel_down_us

def nl_size2int(*args):
  return _capi.nl_size2int(*args)
nl_size2int = _capi.nl_size2int

def nl_size2str(*args):
  return _capi.nl_size2str(*args)
nl_size2str = _capi.nl_size2str

def nl_prob2int(*args):
  return _capi.nl_prob2int(*args)
nl_prob2int = _capi.nl_prob2int

def nl_get_user_hz():
  return _capi.nl_get_user_hz()
nl_get_user_hz = _capi.nl_get_user_hz

def nl_us2ticks(*args):
  return _capi.nl_us2ticks(*args)
nl_us2ticks = _capi.nl_us2ticks

def nl_ticks2us(*args):
  return _capi.nl_ticks2us(*args)
nl_ticks2us = _capi.nl_ticks2us

def nl_str2msec(*args):
  return _capi.nl_str2msec(*args)
nl_str2msec = _capi.nl_str2msec

def nl_msec2str(*args):
  return _capi.nl_msec2str(*args)
nl_msec2str = _capi.nl_msec2str

def nl_llproto2str(*args):
  return _capi.nl_llproto2str(*args)
nl_llproto2str = _capi.nl_llproto2str

def nl_str2llproto(*args):
  return _capi.nl_str2llproto(*args)
nl_str2llproto = _capi.nl_str2llproto

def nl_ether_proto2str(*args):
  return _capi.nl_ether_proto2str(*args)
nl_ether_proto2str = _capi.nl_ether_proto2str

def nl_str2ether_proto(*args):
  return _capi.nl_str2ether_proto(*args)
nl_str2ether_proto = _capi.nl_str2ether_proto

def nl_ip_proto2str(*args):
  return _capi.nl_ip_proto2str(*args)
nl_ip_proto2str = _capi.nl_ip_proto2str

def nl_str2ip_proto(*args):
  return _capi.nl_str2ip_proto(*args)
nl_str2ip_proto = _capi.nl_str2ip_proto

def nl_new_line(*args):
  return _capi.nl_new_line(*args)
nl_new_line = _capi.nl_new_line

def nl_dump(*args):
  return _capi.nl_dump(*args)
nl_dump = _capi.nl_dump

def nl_dump_line(*args):
  return _capi.nl_dump_line(*args)
nl_dump_line = _capi.nl_dump_line

def nl_connect(*args):
  return _capi.nl_connect(*args)
nl_connect = _capi.nl_connect

def nl_close(*args):
  return _capi.nl_close(*args)
nl_close = _capi.nl_close

def nl_pickup(*args):
  return _capi.nl_pickup(*args)
nl_pickup = _capi.nl_pickup

def nl_socket_alloc():
  return _capi.nl_socket_alloc()
nl_socket_alloc = _capi.nl_socket_alloc

def nl_socket_alloc_cb(*args):
  return _capi.nl_socket_alloc_cb(*args)
nl_socket_alloc_cb = _capi.nl_socket_alloc_cb

def nl_socket_free(*args):
  return _capi.nl_socket_free(*args)
nl_socket_free = _capi.nl_socket_free

def nl_socket_get_local_port(*args):
  return _capi.nl_socket_get_local_port(*args)
nl_socket_get_local_port = _capi.nl_socket_get_local_port

def nl_socket_set_local_port(*args):
  return _capi.nl_socket_set_local_port(*args)
nl_socket_set_local_port = _capi.nl_socket_set_local_port

def nl_socket_get_peer_port(*args):
  return _capi.nl_socket_get_peer_port(*args)
nl_socket_get_peer_port = _capi.nl_socket_get_peer_port

def nl_socket_set_peer_port(*args):
  return _capi.nl_socket_set_peer_port(*args)
nl_socket_set_peer_port = _capi.nl_socket_set_peer_port

def nl_socket_get_peer_groups(*args):
  return _capi.nl_socket_get_peer_groups(*args)
nl_socket_get_peer_groups = _capi.nl_socket_get_peer_groups

def nl_socket_set_peer_groups(*args):
  return _capi.nl_socket_set_peer_groups(*args)
nl_socket_set_peer_groups = _capi.nl_socket_set_peer_groups

def nl_socket_set_buffer_size(*args):
  return _capi.nl_socket_set_buffer_size(*args)
nl_socket_set_buffer_size = _capi.nl_socket_set_buffer_size

def nlmsg_size(*args):
  return _capi.nlmsg_size(*args)
nlmsg_size = _capi.nlmsg_size

def nlmsg_total_size(*args):
  return _capi.nlmsg_total_size(*args)
nlmsg_total_size = _capi.nlmsg_total_size

def nlmsg_padlen(*args):
  return _capi.nlmsg_padlen(*args)
nlmsg_padlen = _capi.nlmsg_padlen

def nlmsg_data(*args):
  return _capi.nlmsg_data(*args)
nlmsg_data = _capi.nlmsg_data

def nlmsg_datalen(*args):
  return _capi.nlmsg_datalen(*args)
nlmsg_datalen = _capi.nlmsg_datalen

def nlmsg_tail(*args):
  return _capi.nlmsg_tail(*args)
nlmsg_tail = _capi.nlmsg_tail

def nlmsg_attrdata(*args):
  return _capi.nlmsg_attrdata(*args)
nlmsg_attrdata = _capi.nlmsg_attrdata

def nlmsg_attrlen(*args):
  return _capi.nlmsg_attrlen(*args)
nlmsg_attrlen = _capi.nlmsg_attrlen

def nlmsg_valid_hdr(*args):
  return _capi.nlmsg_valid_hdr(*args)
nlmsg_valid_hdr = _capi.nlmsg_valid_hdr

def nlmsg_ok(*args):
  return _capi.nlmsg_ok(*args)
nlmsg_ok = _capi.nlmsg_ok

def nlmsg_next(*args):
  return _capi.nlmsg_next(*args)
nlmsg_next = _capi.nlmsg_next

def nlmsg_parse(*args):
  return _capi.nlmsg_parse(*args)
nlmsg_parse = _capi.nlmsg_parse

def nlmsg_find_attr(*args):
  return _capi.nlmsg_find_attr(*args)
nlmsg_find_attr = _capi.nlmsg_find_attr

def nlmsg_validate(*args):
  return _capi.nlmsg_validate(*args)
nlmsg_validate = _capi.nlmsg_validate

def nlmsg_alloc():
  return _capi.nlmsg_alloc()
nlmsg_alloc = _capi.nlmsg_alloc

def nlmsg_alloc_size(*args):
  return _capi.nlmsg_alloc_size(*args)
nlmsg_alloc_size = _capi.nlmsg_alloc_size

def nlmsg_alloc_simple(*args):
  return _capi.nlmsg_alloc_simple(*args)
nlmsg_alloc_simple = _capi.nlmsg_alloc_simple

def nlmsg_set_default_size(*args):
  return _capi.nlmsg_set_default_size(*args)
nlmsg_set_default_size = _capi.nlmsg_set_default_size

def nlmsg_inherit(*args):
  return _capi.nlmsg_inherit(*args)
nlmsg_inherit = _capi.nlmsg_inherit

def nlmsg_convert(*args):
  return _capi.nlmsg_convert(*args)
nlmsg_convert = _capi.nlmsg_convert

def nlmsg_reserve(*args):
  return _capi.nlmsg_reserve(*args)
nlmsg_reserve = _capi.nlmsg_reserve

def nlmsg_append(*args):
  return _capi.nlmsg_append(*args)
nlmsg_append = _capi.nlmsg_append

def nlmsg_expand(*args):
  return _capi.nlmsg_expand(*args)
nlmsg_expand = _capi.nlmsg_expand

def nlmsg_put(*args):
  return _capi.nlmsg_put(*args)
nlmsg_put = _capi.nlmsg_put

def nlmsg_hdr(*args):
  return _capi.nlmsg_hdr(*args)
nlmsg_hdr = _capi.nlmsg_hdr

def nlmsg_get(*args):
  return _capi.nlmsg_get(*args)
nlmsg_get = _capi.nlmsg_get

def nlmsg_free(*args):
  return _capi.nlmsg_free(*args)
nlmsg_free = _capi.nlmsg_free

def nlmsg_set_proto(*args):
  return _capi.nlmsg_set_proto(*args)
nlmsg_set_proto = _capi.nlmsg_set_proto

def nlmsg_get_proto(*args):
  return _capi.nlmsg_get_proto(*args)
nlmsg_get_proto = _capi.nlmsg_get_proto

def nlmsg_get_max_size(*args):
  return _capi.nlmsg_get_max_size(*args)
nlmsg_get_max_size = _capi.nlmsg_get_max_size

def nlmsg_set_src(*args):
  return _capi.nlmsg_set_src(*args)
nlmsg_set_src = _capi.nlmsg_set_src

def nlmsg_get_src(*args):
  return _capi.nlmsg_get_src(*args)
nlmsg_get_src = _capi.nlmsg_get_src

def nlmsg_set_dst(*args):
  return _capi.nlmsg_set_dst(*args)
nlmsg_set_dst = _capi.nlmsg_set_dst

def nlmsg_get_dst(*args):
  return _capi.nlmsg_get_dst(*args)
nlmsg_get_dst = _capi.nlmsg_get_dst

def nlmsg_set_creds(*args):
  return _capi.nlmsg_set_creds(*args)
nlmsg_set_creds = _capi.nlmsg_set_creds

def nlmsg_get_creds(*args):
  return _capi.nlmsg_get_creds(*args)
nlmsg_get_creds = _capi.nlmsg_get_creds

def nl_nlmsgtype2str(*args):
  return _capi.nl_nlmsgtype2str(*args)
nl_nlmsgtype2str = _capi.nl_nlmsgtype2str

def nl_str2nlmsgtype(*args):
  return _capi.nl_str2nlmsgtype(*args)
nl_str2nlmsgtype = _capi.nl_str2nlmsgtype

def nl_nlmsg_flags2str(*args):
  return _capi.nl_nlmsg_flags2str(*args)
nl_nlmsg_flags2str = _capi.nl_nlmsg_flags2str

def nl_msg_parse(*args):
  return _capi.nl_msg_parse(*args)
nl_msg_parse = _capi.nl_msg_parse

def nl_msg_dump(*args):
  return _capi.nl_msg_dump(*args)
nl_msg_dump = _capi.nl_msg_dump

def cast_obj(*args):
  return _capi.cast_obj(*args)
cast_obj = _capi.cast_obj

def object_alloc_name(*args):
  return _capi.object_alloc_name(*args)
object_alloc_name = _capi.object_alloc_name

def nl_object_alloc(*args):
  return _capi.nl_object_alloc(*args)
nl_object_alloc = _capi.nl_object_alloc

def nl_object_free(*args):
  return _capi.nl_object_free(*args)
nl_object_free = _capi.nl_object_free

def nl_object_clone(*args):
  return _capi.nl_object_clone(*args)
nl_object_clone = _capi.nl_object_clone

def nl_object_get(*args):
  return _capi.nl_object_get(*args)
nl_object_get = _capi.nl_object_get

def nl_object_put(*args):
  return _capi.nl_object_put(*args)
nl_object_put = _capi.nl_object_put

def nl_object_shared(*args):
  return _capi.nl_object_shared(*args)
nl_object_shared = _capi.nl_object_shared

def nl_object_dump_buf(*args):
  return _capi.nl_object_dump_buf(*args)
nl_object_dump_buf = _capi.nl_object_dump_buf

def nl_object_dump(*args):
  return _capi.nl_object_dump(*args)
nl_object_dump = _capi.nl_object_dump

def nl_object_identical(*args):
  return _capi.nl_object_identical(*args)
nl_object_identical = _capi.nl_object_identical

def nl_object_diff(*args):
  return _capi.nl_object_diff(*args)
nl_object_diff = _capi.nl_object_diff

def nl_object_match_filter(*args):
  return _capi.nl_object_match_filter(*args)
nl_object_match_filter = _capi.nl_object_match_filter

def nl_object_attrs2str(*args):
  return _capi.nl_object_attrs2str(*args)
nl_object_attrs2str = _capi.nl_object_attrs2str

def nl_object_attr_list(*args):
  return _capi.nl_object_attr_list(*args)
nl_object_attr_list = _capi.nl_object_attr_list

def nl_object_mark(*args):
  return _capi.nl_object_mark(*args)
nl_object_mark = _capi.nl_object_mark

def nl_object_unmark(*args):
  return _capi.nl_object_unmark(*args)
nl_object_unmark = _capi.nl_object_unmark

def nl_object_is_marked(*args):
  return _capi.nl_object_is_marked(*args)
nl_object_is_marked = _capi.nl_object_is_marked

def nl_object_get_refcnt(*args):
  return _capi.nl_object_get_refcnt(*args)
nl_object_get_refcnt = _capi.nl_object_get_refcnt

def alloc_cache_name(*args):
  return _capi.alloc_cache_name(*args)
alloc_cache_name = _capi.alloc_cache_name

def alloc_cache_mngr(*args):
  return _capi.alloc_cache_mngr(*args)
alloc_cache_mngr = _capi.alloc_cache_mngr

def cache_mngr_add(*args):
  return _capi.cache_mngr_add(*args)
cache_mngr_add = _capi.cache_mngr_add

def nl_cache_nitems(*args):
  return _capi.nl_cache_nitems(*args)
nl_cache_nitems = _capi.nl_cache_nitems

def nl_cache_nitems_filter(*args):
  return _capi.nl_cache_nitems_filter(*args)
nl_cache_nitems_filter = _capi.nl_cache_nitems_filter

def nl_cache_get_ops(*args):
  return _capi.nl_cache_get_ops(*args)
nl_cache_get_ops = _capi.nl_cache_get_ops

def nl_cache_get_first(*args):
  return _capi.nl_cache_get_first(*args)
nl_cache_get_first = _capi.nl_cache_get_first

def nl_cache_get_last(*args):
  return _capi.nl_cache_get_last(*args)
nl_cache_get_last = _capi.nl_cache_get_last

def nl_cache_get_next(*args):
  return _capi.nl_cache_get_next(*args)
nl_cache_get_next = _capi.nl_cache_get_next

def nl_cache_get_prev(*args):
  return _capi.nl_cache_get_prev(*args)
nl_cache_get_prev = _capi.nl_cache_get_prev

def nl_cache_alloc(*args):
  return _capi.nl_cache_alloc(*args)
nl_cache_alloc = _capi.nl_cache_alloc

def nl_cache_subset(*args):
  return _capi.nl_cache_subset(*args)
nl_cache_subset = _capi.nl_cache_subset

def nl_cache_clear(*args):
  return _capi.nl_cache_clear(*args)
nl_cache_clear = _capi.nl_cache_clear

def nl_cache_free(*args):
  return _capi.nl_cache_free(*args)
nl_cache_free = _capi.nl_cache_free

def nl_cache_add(*args):
  return _capi.nl_cache_add(*args)
nl_cache_add = _capi.nl_cache_add

def nl_cache_parse_and_add(*args):
  return _capi.nl_cache_parse_and_add(*args)
nl_cache_parse_and_add = _capi.nl_cache_parse_and_add

def nl_cache_remove(*args):
  return _capi.nl_cache_remove(*args)
nl_cache_remove = _capi.nl_cache_remove

def nl_cache_refill(*args):
  return _capi.nl_cache_refill(*args)
nl_cache_refill = _capi.nl_cache_refill

def nl_cache_pickup(*args):
  return _capi.nl_cache_pickup(*args)
nl_cache_pickup = _capi.nl_cache_pickup

def nl_cache_resync(*args):
  return _capi.nl_cache_resync(*args)
nl_cache_resync = _capi.nl_cache_resync

def nl_cache_include(*args):
  return _capi.nl_cache_include(*args)
nl_cache_include = _capi.nl_cache_include

def nl_cache_set_arg1(*args):
  return _capi.nl_cache_set_arg1(*args)
nl_cache_set_arg1 = _capi.nl_cache_set_arg1

def nl_cache_set_arg2(*args):
  return _capi.nl_cache_set_arg2(*args)
nl_cache_set_arg2 = _capi.nl_cache_set_arg2

def nl_cache_is_empty(*args):
  return _capi.nl_cache_is_empty(*args)
nl_cache_is_empty = _capi.nl_cache_is_empty

def nl_cache_search(*args):
  return _capi.nl_cache_search(*args)
nl_cache_search = _capi.nl_cache_search

def nl_cache_mark_all(*args):
  return _capi.nl_cache_mark_all(*args)
nl_cache_mark_all = _capi.nl_cache_mark_all

def nl_cache_dump(*args):
  return _capi.nl_cache_dump(*args)
nl_cache_dump = _capi.nl_cache_dump

def nl_cache_dump_filter(*args):
  return _capi.nl_cache_dump_filter(*args)
nl_cache_dump_filter = _capi.nl_cache_dump_filter

def nl_cache_foreach(*args):
  return _capi.nl_cache_foreach(*args)
nl_cache_foreach = _capi.nl_cache_foreach

def nl_cache_foreach_filter(*args):
  return _capi.nl_cache_foreach_filter(*args)
nl_cache_foreach_filter = _capi.nl_cache_foreach_filter

def nl_cache_ops_lookup(*args):
  return _capi.nl_cache_ops_lookup(*args)
nl_cache_ops_lookup = _capi.nl_cache_ops_lookup

def nl_cache_ops_associate(*args):
  return _capi.nl_cache_ops_associate(*args)
nl_cache_ops_associate = _capi.nl_cache_ops_associate

def nl_msgtype_lookup(*args):
  return _capi.nl_msgtype_lookup(*args)
nl_msgtype_lookup = _capi.nl_msgtype_lookup

def nl_cache_ops_foreach(*args):
  return _capi.nl_cache_ops_foreach(*args)
nl_cache_ops_foreach = _capi.nl_cache_ops_foreach

def nl_cache_mngt_register(*args):
  return _capi.nl_cache_mngt_register(*args)
nl_cache_mngt_register = _capi.nl_cache_mngt_register

def nl_cache_mngt_unregister(*args):
  return _capi.nl_cache_mngt_unregister(*args)
nl_cache_mngt_unregister = _capi.nl_cache_mngt_unregister

def nl_cache_mngt_provide(*args):
  return _capi.nl_cache_mngt_provide(*args)
nl_cache_mngt_provide = _capi.nl_cache_mngt_provide

def nl_cache_mngt_unprovide(*args):
  return _capi.nl_cache_mngt_unprovide(*args)
nl_cache_mngt_unprovide = _capi.nl_cache_mngt_unprovide

def nl_cache_mngt_require(*args):
  return _capi.nl_cache_mngt_require(*args)
nl_cache_mngt_require = _capi.nl_cache_mngt_require
NL_AUTO_PROVIDE = _capi.NL_AUTO_PROVIDE

def nl_cache_mngr_get_fd(*args):
  return _capi.nl_cache_mngr_get_fd(*args)
nl_cache_mngr_get_fd = _capi.nl_cache_mngr_get_fd

def nl_cache_mngr_poll(*args):
  return _capi.nl_cache_mngr_poll(*args)
nl_cache_mngr_poll = _capi.nl_cache_mngr_poll

def nl_cache_mngr_data_ready(*args):
  return _capi.nl_cache_mngr_data_ready(*args)
nl_cache_mngr_data_ready = _capi.nl_cache_mngr_data_ready

def nl_cache_mngr_free(*args):
  return _capi.nl_cache_mngr_free(*args)
nl_cache_mngr_free = _capi.nl_cache_mngr_free

def addr_parse(*args):
  return _capi.addr_parse(*args)
addr_parse = _capi.addr_parse

def nl_addr_alloc(*args):
  return _capi.nl_addr_alloc(*args)
nl_addr_alloc = _capi.nl_addr_alloc

def nl_addr_alloc_attr(*args):
  return _capi.nl_addr_alloc_attr(*args)
nl_addr_alloc_attr = _capi.nl_addr_alloc_attr

def nl_addr_build(*args):
  return _capi.nl_addr_build(*args)
nl_addr_build = _capi.nl_addr_build

def nl_addr_clone(*args):
  return _capi.nl_addr_clone(*args)
nl_addr_clone = _capi.nl_addr_clone

def nl_addr_get(*args):
  return _capi.nl_addr_get(*args)
nl_addr_get = _capi.nl_addr_get

def nl_addr_put(*args):
  return _capi.nl_addr_put(*args)
nl_addr_put = _capi.nl_addr_put

def nl_addr_shared(*args):
  return _capi.nl_addr_shared(*args)
nl_addr_shared = _capi.nl_addr_shared

def nl_addr_cmp(*args):
  return _capi.nl_addr_cmp(*args)
nl_addr_cmp = _capi.nl_addr_cmp

def nl_addr_cmp_prefix(*args):
  return _capi.nl_addr_cmp_prefix(*args)
nl_addr_cmp_prefix = _capi.nl_addr_cmp_prefix

def nl_addr_iszero(*args):
  return _capi.nl_addr_iszero(*args)
nl_addr_iszero = _capi.nl_addr_iszero

def nl_addr_valid(*args):
  return _capi.nl_addr_valid(*args)
nl_addr_valid = _capi.nl_addr_valid

def nl_addr_guess_family(*args):
  return _capi.nl_addr_guess_family(*args)
nl_addr_guess_family = _capi.nl_addr_guess_family

def nl_addr_fill_sockaddr(*args):
  return _capi.nl_addr_fill_sockaddr(*args)
nl_addr_fill_sockaddr = _capi.nl_addr_fill_sockaddr

def nl_addr_info(*args):
  return _capi.nl_addr_info(*args)
nl_addr_info = _capi.nl_addr_info

def nl_addr_resolve(*args):
  return _capi.nl_addr_resolve(*args)
nl_addr_resolve = _capi.nl_addr_resolve

def nl_addr_set_family(*args):
  return _capi.nl_addr_set_family(*args)
nl_addr_set_family = _capi.nl_addr_set_family

def nl_addr_get_family(*args):
  return _capi.nl_addr_get_family(*args)
nl_addr_get_family = _capi.nl_addr_get_family

def nl_addr_set_binary_addr(*args):
  return _capi.nl_addr_set_binary_addr(*args)
nl_addr_set_binary_addr = _capi.nl_addr_set_binary_addr

def nl_addr_get_binary_addr(*args):
  return _capi.nl_addr_get_binary_addr(*args)
nl_addr_get_binary_addr = _capi.nl_addr_get_binary_addr

def nl_addr_get_len(*args):
  return _capi.nl_addr_get_len(*args)
nl_addr_get_len = _capi.nl_addr_get_len

def nl_addr_set_prefixlen(*args):
  return _capi.nl_addr_set_prefixlen(*args)
nl_addr_set_prefixlen = _capi.nl_addr_set_prefixlen

def nl_addr_get_prefixlen(*args):
  return _capi.nl_addr_get_prefixlen(*args)
nl_addr_get_prefixlen = _capi.nl_addr_get_prefixlen

def nl_af2str(*args):
  return _capi.nl_af2str(*args)
nl_af2str = _capi.nl_af2str

def nl_str2af(*args):
  return _capi.nl_str2af(*args)
nl_str2af = _capi.nl_str2af

def nl_addr2str(*args):
  return _capi.nl_addr2str(*args)
nl_addr2str = _capi.nl_addr2str


